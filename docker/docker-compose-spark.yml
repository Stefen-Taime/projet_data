version: "3.9"

services:
  spark:
    image: "docker.io/bitnami/spark:3.3"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
    networks:
      - docker-stack
    links:
      - minio
    depends_on:
      - minio  
  spark-worker:
    image: "docker.io/bitnami/spark:3.3"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    links:
      - minio
    depends_on:
      - minio  
    networks:
      - docker-stack

  spark_notebook:
    image: "jupyter/pyspark-notebook:spark-3.3.0"
    ports:
      - "8888:8888"
      - "4040-4045:4040-4045"
    volumes:
    - $PWD/work:/home/$USER/work
    networks:
      - docker-stack  
    working_dir: /home/$USER/work
    links:
      - minio
    depends_on:
      - minio
    environment:
      CHOWN_HOME: "yes"
      GRANT_SUDO: "yes"
      NB_UID: 1000
      NB_GID: 100
      NB_USER: $USER
      NB_GROUP: staff
      JUPYTER_TOKEN: ${JUPYTER_TOKEN}
      
    user: root
    deploy:
     replicas: 1
     restart_policy:
       condition: on-failure  
  
networks:
  docker-stack: